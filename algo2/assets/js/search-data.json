{"0": {
    "doc": "Announcements",
    "title": "Announcements Page",
    "content": " ",
    "url": "/algo2/announcements/#announcements-page",
    
    "relUrl": "/announcements/#announcements-page"
  },"1": {
    "doc": "Announcements",
    "title": "Various important updates",
    "content": "Hi all, . I know this is a wall of text, but it’s all important, so please read it! . Good news (pre-exam support) . I can now confirm we’ll have support lined up in the run-up to the exam, despite how early it is in the assessment period! . | We’ll be monitoring the unit team for questions from January 4th to January 8th, so if any questions come up when you’re revising, ask them then and we’ll answer. | Adi will be running an online drop-in session at 1pm on January 6th (i.e. the Friday before the exam). | By the end of tomorrow, I’ll put up new versions of all the Blackboard quizzes for revision purposes - these will be linked from the main unit page. | Also by the end of tomorrow, anyone who submitted a quiz late (and whose mark currently shows as zero for technical reasons) will have that mark updated to match the university regulation late penalties as set out here and in the unit FAQ. If your mark isn’t correct by Monday, let me know over email and we can sort it out. This is non-urgent - I likely won’t reply until I return from leave on January 9th, but there’s still several weeks to fix things after that. | . Bad news (things cancelled tomorrow) . Jonathan and Adi can’t make it tomorrow, so no drop-in will be running and we’ll be merging the problem classes again (with me running the merged class). Ugly news (finalised exam info) . The exam information section of the unit page has been updated and is now finalised. I strongly recommend everyone reads this in detail - there’s very detailed format information there along with a mock exam, past papers, and strategy tips. A few things below that have either changed since the draft, or are so important that I want to clarify them over email: . | You’re allowed to bring four sheets of A4 into the exam. They can be handwritten or printed, and they can be single- or double-sided. But eight sheets of single-sided A4 isn’t allowed. | You’re allowed to bring any non-programmable calculator into the exam. You won’t need any functionality beyond basic arithmetic operations, though (and maybe not even that). | The exam will be entirely on-paper. The idea of running exams in the computer labs to allow automatic marking for the short-answer section didn’t work out. | I am not expecting anyone to finish every question on the exam. The hardest questions will be out of reach for most people, but will also be worth very few marks - they are there to differentiate a 90% from a 95%. As such, you’re expected to try the easiest questions with the best mark-to-effort ratio first - the “short”, “medium” and “long” tags are there to help you prioritise. | Despite this, I am not expecting many people to fail the unit. If you’ve been keeping up with the quizzes and have half marks or better on all of them, then you likely have 10% of your unit grade in the bank already. That means you can pass the exam on 50 marks out of 150. There are enough questions based on bookwork or stepping through algorithms or similar to achieve this with plenty of room to spare, especially given that you can bring your notes into the exam, and historically the failure rate for this unit has been low. | . Algorithms next year . If you’ve enjoyed this unit, especially the more mathematical parts, then you should definitely consider taking Advanced Algorithms next year! This is true even if you don’t get a great mark - Raphael and Christian are less brutal than me in setting exams, so if you’ve done decently in Algorithms II then you’ll likely do well in Advanced Algorithms. (Also, Advanced Algorithms starts digging into randomised stuff, so you finally get to learn how hash tables work…!) . All that having been said: good luck, everyone! I might set a high bar for the unit, but I do so in the hope that as many people clear it as possible and then go on to find it all useful. :-) Have a good Christmas/Hanukkah/Kwanzaa if you celebrate, and at least a couple of weeks of good holiday either way. Best wishes, . John . Cat of the day: Here! . ",
    "url": "/algo2/announcements/#various-important-updates",
    
    "relUrl": "/announcements/#various-important-updates"
  },"2": {
    "doc": "Announcements",
    "title": "Quiz deadline glitch, focused drop-in topic",
    "content": "Hi all, . First off, it seems I failed to specify a time for this week’s quiz deadline, and Blackboard defaulted to midnight rather than noon today - sorry about that! I’ve now fixed this, and everyone who submitted before noon should now have received full credit. I should also remind you that while if you ever actually submit late you’ll see a zero for the quiz, this zero is actually just Blackboard’s way of saying “needs marking” - there’s a standard late penalty required by the university that Blackboard can’t handle automatically, so I apply them manually at the end of term. (See here for more details - they are less severe than an instant zero!) . I should also mention that Charlotte’s focused drop-in session this Thursday will focus on the Ford-Fulkerson algorithm. Best wishes, . John . Cat of the day: Here, don’t forget to hit play! . ",
    "url": "/algo2/announcements/#quiz-deadline-glitch-focused-drop-in-topic",
    
    "relUrl": "/announcements/#quiz-deadline-glitch-focused-drop-in-topic"
  },"3": {
    "doc": "Announcements",
    "title": "Disruption to problem classes (including tomorrow)",
    "content": "Hi all, . Unfortunately we’re going to be seeing some disruption to the normally-scheduled problem classes over the next few weeks. Adi is currently ill and his voice won’t hold up to one 90-minute problem class this week, let alone two, and I’m going to be in Germany for a research workshop in week 10. (Dagstuhl workshops are built around bringing together the best people in a very specific field to spark ideas off each other - since approximate counting and sampling is half of my research, I can’t really miss this!) We’re going to resolve this by recombining the foundational and problem-based classes for these weeks. So combined with the strike action Adi mentioned last week, the new timetable will be: . | Week 8: Adi is ill, I run a merged problem class at the normal times. | Week 9: Strike action. No problem class or Q&amp;A session runs as both Thursday and Friday are strike days, but the sheet and solutions are released as normal and drop-ins run as normal. | Week 10: I’m out of the country, Adi runs a merged problem class at the normal times. Everything else will run as normal, including the Q&amp;A; Adi might lead it instead of me if the venue has unreliable Internet access, but I’m not expecting that to be an issue. | Weeks 11-12: Normal service resumes with both Adi and John running separate problem classes. | . Also, as a reminder, the focus for tomorrow’s drop-in session will be 2-3-4 trees - these are probably the most complicated thing in the unit from the point of view of “what the algorithm does” (as opposed to “why the algorithm works”), so if you’ve been having trouble then do come along. Best wishes, . John . Cat of the day: Here! . ",
    "url": "/algo2/announcements/#disruption-to-problem-classes-including-tomorrow",
    
    "relUrl": "/announcements/#disruption-to-problem-classes-including-tomorrow"
  },"4": {
    "doc": "Announcements",
    "title": "Quiz deadline change",
    "content": "Hi all, . I hope the course is going well! We have a few updates about the course we wanted to share with you. Firstly, following student feedback, the quiz deadlines have been moved to Tuesdays. Hopefully this extra weekday is helpful. Related to this, Charlotte has now taken over running the Monday office hour. Otherwise we don’t expect any changes to the contact hours for this course. The focussed drop in sessions will still be on Thursdays (also run by Charlotte), and this week will be focussed on 2-3-4 trees. On another note, there is currently a strike planned by the UCU on Friday the 25th of November (next Friday). This means that both streams of the problem classes will not run on that date. For more information, please feel free to refer to the union website https://www.ucu.org.uk/article/12469/FAQs . ",
    "url": "/algo2/announcements/#quiz-deadline-change",
    
    "relUrl": "/announcements/#quiz-deadline-change"
  },"5": {
    "doc": "Announcements",
    "title": "Quiz deadline change and response to mid-term feedback",
    "content": "Hi all, . The mid-term feedback is in! Thanks to everyone who responded, 60 people is a really good rate and it helps us make things better for future years. I’d rather not stick the feedback and my responses on the open Internet, and it’s pretty long, so I’ve linked it on OneDrive here. That said, there are a couple of things that I think are major enough to mention in this email. Quiz deadlines: . Some people made the very reasonable point that having the quiz deadline on a Monday means people are pushed into working on it over the weekend, which besides being generally antisocial is also the time when there’s least TA support available. As such, quiz deadlines will be on Tuesdays from now on. The quiz 6 deadline has been moved back a day accordingly. More examples: . A lot of people have asked for more examples to be available. There’s one really good and under-utilised source of this - the foundational problem classes! Adi is an excellent teacher and class sizes are currently very small (ten people or less). I’ve heard some concern via the Staff-Student Liaison Committee that going to them will leave you unprepared for the exam, or leave you needing to do perfectly to secure a pass, and this couldn’t be further from the truth. If you’ve kept up with the quizzes (which are worth 10% of the overall mark), then you need a mark of 50/150 to pass the exam. I’ve written the exam now, and roughly speaking the mark breakdown is: . 80 marks: A mix of pure bookwork questions (“Which of these five options is the definition of O-notation?”), questions that ask about a definition (“Is this graph bipartite?”), and questions that ask you to apply a given algorithm to a given input. 55 marks: Questions asking you to do things like finding counterexamples for greedy algorithms, finding reductions, prove things by induction or come up with dynamic programming algorithms. About 20 marks of these are pitched at a level where you should be able to do them just from understanding the underlying concepts, without spending any time practising them in problem-based problem classes. Think of the past paper question that asks for a graph with a Hamilton cycle but no Euler walk as an example. The remaining 35 marks get steadily harder, and you’ll probably want to have spent some time practising problem-solving to do well at them. 15 marks: OK, these ones are hard, and are intended to distinguish between the very best candidates. So if you’ve never been to the problem-based problem classes, and you don’t try the harder quiz questions, and you don’t try either problem sheet questions or practice exam questions when you’re revising… you’ve still got a solid 100 marks available to you, and you need 50 of those to pass. Meanwhile, if you try to go into the exam without understanding the fundamentals, it’s not going to be pretty even if your problem-solving skills are good. So… I would really strongly recommend you give the foundational problem classes a try! They’re not a dastardly trap, they’re the single best thing you can do to prepare for the exam if you’re having trouble with the fundamentals. And you can always just go to one, and swap back to the problem-based stream next week - especially if there’s something that week you’re having trouble with. There are also five past exam papers available (with full solutions) on the unit page here - they’re a little harder than the actual exam will be, since in past years the exam was open-Internet and not just open-note. And of course, you can always ask on the Teams channel or in the daily drop-ins. Drop-in topic for week 8 . Lastly, Charlotte’s focused drop-in session next week will be based on 2-3-4 trees. Best wishes, . John . Cat of the day: Here! . ",
    "url": "/algo2/announcements/#quiz-deadline-change-and-response-to-mid-term-feedback",
    
    "relUrl": "/announcements/#quiz-deadline-change-and-response-to-mid-term-feedback"
  },"6": {
    "doc": "Announcements",
    "title": "Minor error in video 6-4",
    "content": "Hi all, . Just a quick heads-up that there’s a minor error in the definition of a red-black tree in video 6-4, right at the end - a node can have a single child (rather than two or zero) if the node is black and its child is a red leaf. The slides are fixed, and I was planning to fix the video before it went up, but the last week has been a mad 80-hour sprint to get a 90-page paper finished and submitted to a conference before both the deadline hits and my co-authors go on parental leave…! The deadline is Monday evening, so hopefully it will be up on arXiv on Tuesday in all its terrible glory and you can see exactly why it took so long. Best wishes, . John . Cat of the day: Here! . ",
    "url": "/algo2/announcements/#minor-error-in-video-6-4",
    
    "relUrl": "/announcements/#minor-error-in-video-6-4"
  },"7": {
    "doc": "Announcements",
    "title": "Reading week arrangements",
    "content": "Hi all, . Congratulations on making it to reading week! As with most units, there won’t be any dedicated teaching so you all have time to catch back up (and so that I can sprint for a conference deadline on my next paper!), but the normal support will still be running. This means: . | We’ll still be answering questions on the Teams channel. | Drop-ins will still be running (except the drop-in on Friday November 4th). Charlotte’s focused office hour next week will focus on matchings. | There won’t be any Q&amp;A or problem class. | The week 5 quiz will be due on Monday of week 7, so you have all of reading week to do it. | . Have fun, have a good rest, and see you all in week 7! . Best wishes, . John . Cat of the day: Here! . ",
    "url": "/algo2/announcements/#reading-week-arrangements",
    
    "relUrl": "/announcements/#reading-week-arrangements"
  },"8": {
    "doc": "Announcements",
    "title": "Foundational Stream and New Office Hour Format",
    "content": "Hi Guys, . I hope year 2 is going well! . Last week was the first week of the new foundational stream in the problem classes, and we think they went really well, so we’re going to continue them for the rest of term. If you were already coming along, then that’s great! However, attendance last week wasn’t as high as we’d hoped, so I’m gonna shamelessly advertise these some more :) . The foundational stream is intended to help students grasp the basics. If you’ve been challenged or confused by any of the * or ** questions in the problem sheets, then these are the sessions for you. No prep is required, just show up, and we’ll walk you through everything you need to know. Friday morning as usual in MVB 1.11. Additionally, from tomorrow Charlotte will start running a ‘focussed office hour’. This will be like a normal office hour, except now we will also encourage you to show up without questions, and each week there will be a different topic which Charlotte will go through. These topics will be related to the material covered in that week. These will continue to be on Thursdays at 2pm in Queens 1.59. Historically, students who engage with the contact hours usually pass. We strongly encourage you to come along to sessions - we want to help you understand this material as well :) . Thanks, Adi . ",
    "url": "/algo2/announcements/#foundational-stream-and-new-office-hour-format",
    
    "relUrl": "/announcements/#foundational-stream-and-new-office-hour-format"
  },"9": {
    "doc": "Announcements",
    "title": "Error in notes (weak connectedness)",
    "content": "Hi all, . I’ve realised there’s a minor but important error in the notes and video for lecture 3-1: the definition of weak connectedness should say that G is weakly connected if for all vertices u and v, there’s a path from u to v ignoring edge directions. (It previously required either a path from u to v or a path from v to u.) I’ve fixed this in the lecture notes now, and will upload a fixed version of the video later this week. There are no implications for Blackboard quiz marks, since the two definitions are equivalent for all the graphs in the quiz questions. To see the difference between these two definitions, think of the graph with V = {a,b,c} and E = {(a,b), (c,b)} - in other words, two edges, both pointing towards b. Under the old, incorrect definition of weak connectedness, this graph is not weakly connected, since there’s no directed path from a to c and no directed path from c to a. But under the new, correct definition, this graph is weakly connected, since abc is a path from a to c ignoring edge directions. Conceptually, weak connectedness is exactly like connectedness in an undirected graph - it is saying that the graph is “all one lump” if you draw it out. I’d also like to shamelessly plug the new problem class format again. Right now we have very low numbers attending the foundational classes with Adi - which is absolutely great for everyone attending, since they’re getting quality teaching in an incredibly small group size! But it’s less great for all the people who would benefit from coming, but who are staying home. I can’t stress this enough - no prep is required, Adi is a great teacher, and you will learn a hell of a lot. Barring illness, absolutely everyone taking the unit should be coming to either Adi’s classes or mine. Best wishes, . John . Cat of the day: Here! . ",
    "url": "/algo2/announcements/#error-in-notes-weak-connectedness",
    
    "relUrl": "/announcements/#error-in-notes-weak-connectedness"
  },"10": {
    "doc": "Announcements",
    "title": "New problem class format from tomorrow!",
    "content": "Hi all, . From tomorrow onwards, we’ll be experimenting with a new format for problem classes, which means which group you’re in might change (although your time slot won’t). So please read the rest of this email! . Just about everyone finds this unit hard, but it became clear in the last class that different people find it hard in different ways. We’ve decided that going forward, we’ll split up the problem classes in each time slot according to these two areas people are struggling with most. Foundational class: Run by Adi in MVB 1.11 with an emphasis on helping with the definitions and algorithms themselves. Problem-based class: Run by John in MVB 1.11a with an emphasis on using those definitions and algorithms to solve problems creatively. As a general guide, if you find yourself having a lot of trouble with the * and ** problems in a quiz in a given week, then you’ll probably get more out of Adi’s classes. These class will focus on questions like “what’s the difference between a path and a walk, or between isomorphism and equality, or between an induced subgraph and a subgraph?” “Is big O like less than or equals, or is it the other way round?” or “How would I implement Dijkstra’s algorithm?” . Other people find that the videos/quizzes/unit Team are enough to help them understand the definitions and algorithms introduced in the unit, but find it hard to see how to solve problems using these concepts. If that’s you, then you’ll probably get more out of my classes. These class will focus on questions like “How can you apply an exchange argument to a real greedy algorithm?” “How do you break a problem down into subproblems to apply induction or dynamic programming?” and “How would you come up with the proof of Dirac’s theorem for yourself?” . This will replace your previous group assignments. Whether you were originally assigned to my group or Adi’s group for a given time slot, you can decide which class to go to on the day each week. This means that if you find the definitions or algorithms in a given week are unusually hard or unusually easy, then you can go to Adi’s class or my class accordingly. A TA will be standing outside with a whiteboard to point people to the right rooms. There won’t be anything examinable in either of our classes that’s not also covered in the lecture videos, so you don’t need to worry about missing out. Also, one thing to ease people’s nerves a bit - while this is a very hard unit do well in, it’s not a very hard unit to pass. When I write the exam, I set up the mark distribution so that you can get a high 2.ii in this unit with just a solid grasp of the foundations. This means that if you understand the definitions and know the algorithms, then you have enough for a very comfortable pass. Getting a 2.i in the unit does require you to do some problem-solving as well, and this is genuinely difficult - normally about half the class manages it, and I have a lot of respect for everyone who does. But if you’re just worried about passing, then you can relax a little! . Best wishes, . John . Cat of the day: Here! . ",
    "url": "/algo2/announcements/#new-problem-class-format-from-tomorrow",
    
    "relUrl": "/announcements/#new-problem-class-format-from-tomorrow"
  },"11": {
    "doc": "Announcements",
    "title": "COVID cases rising, policy reminder",
    "content": "Hi all, . Unfortunately, fresher’s flu season has become more sinister in recent years, and like this time last year, we’ve started to get reports of students in this unit testing positive for COVID… I’m not planning to move problem classes online - when it comes to small-group teaching, in-person is drastically better, and a good mask cuts out almost all the risk the risk to you (see the first video for an overview). But I wanted to flag that there are active cases for the benefit of people who might otherwise choose not to wear a mask - while the COVID-positive students I know about are doing the right thing and staying home, normally for every two people who know they have COVID there’s one person spreading it asymptomatically. Speaking of which, if you have COVID yourself, please don’t come to problem classes! While the classes are very useful, they’re also optional. We don’t take attendance, and they’re going to be recorded and made available on Re/Play, so you can catch back up afterwards. You’re also much more likely to get a worse case of COVID if you push yourself while you’ve got it - so not only is it better to keep other people safe, it’s also in your own best interest to stay home and recover quickly rather than try to come in and end up recovering slowly. Best wishes, . John . Cat of the day: Here! . ",
    "url": "/algo2/announcements/#covid-cases-rising-policy-reminder",
    
    "relUrl": "/announcements/#covid-cases-rising-policy-reminder"
  },"12": {
    "doc": "Announcements",
    "title": "Welcome and drop-in sessions",
    "content": "Hi all, . Welcome to Algorithms II! At this point you’ve hopefully already noticed that the main site is hosted on GitHub Pages here - last year Blackboard gave us a lot of trouble with file permission issues, and this should help to mitigate them. The first video gives a much more detailed introduction, but in short, this unit will cover material on a rolling basis. For example, for Week 1, I released video lectures this morning, we’ll have an online Q&amp;A on Thursday, there’s a Blackboard quiz on the material with a deadline of next Monday (i.e. October 3rd), then we’ll have a 90-minute in-person problem class on it the following Friday. Meanwhile, Week 2 will have its own material release and Q&amp;A to match a quiz deadline and problem class in Week 3, and so on. These weekly quizzes do count towards your unit mark, and are essentially free marks - don’t let them slip by! Again, the first quiz deadline is noon on Monday October 3rd. Also, it looks like we’ll also be able to run daily drop-in sessions with TAs this term. The final time slots and locations will appear in your calendars soon, but the draft version is: . | Mondays 11:45-12:45: In-person, room TBD. Week 2 onwards. | Tuesdays 10:00-11:00: In-person, room TBD. Week 2 onwards. | Wednesdays 15:00-16:00: Online on the unit team. Week 2 onwards. | Thursdays 14:00-15:00: In-person, room TBD. Week 2 onwards. | Fridays 13:00-14:00: Online on the unit team. Week *1* onwards. | . I know that not all of you will be able to make all these drop-in sessions, because free timetable slots are scarce, but I think we’ve managed to schedule things in such a way that most people have access to all of them and everyone has access to some of them. I hope you all enjoy the unit - see you on Thursday for the first Q&amp;A! . Best wishes, . John . Cat of the day: Here! . ",
    "url": "/algo2/announcements/#welcome-and-drop-in-sessions",
    
    "relUrl": "/announcements/#welcome-and-drop-in-sessions"
  },"13": {
    "doc": "Announcements",
    "title": "Announcements",
    "content": ". | Announcements Page . | Various important updates . | Good news (pre-exam support) | Bad news (things cancelled tomorrow) | Ugly news (finalised exam info) | Algorithms next year | . | Quiz deadline glitch, focused drop-in topic | Disruption to problem classes (including tomorrow) | Quiz deadline change | Quiz deadline change and response to mid-term feedback | Minor error in video 6-4 | Reading week arrangements | Foundational Stream and New Office Hour Format | Error in notes (weak connectedness) | New problem class format from tomorrow! | COVID cases rising, policy reminder | Welcome and drop-in sessions | . | . ",
    "url": "/algo2/announcements/",
    
    "relUrl": "/announcements/"
  },"14": {
    "doc": "Exam and quiz info",
    "title": "Blackboard quizzes",
    "content": ". | There are 10 quizzes in total, one per week, and they are equally weighted (so each quiz counts for 10% of your “in-class tests” mark and 1% of your unit mark). | Quizzes are always due at midday on Tuesday the week after release. The university standard late penalties will apply. | The quizzes are not tests. There is no time limit, you can leave the page and come back, you can (and should!) work on quizzes together with your friends, and you are free to use any online or offline resources you want. | If your raw mark on a quiz is greater than 50%, then it will be set to 100% in the final grade calculation. Otherwise, it will remain unchanged. For example, a student who gets 55% in nine quizzes and 45% in one quiz will get a total mark of 94.5%. | The intention is that thanks to the “rounding” above, almost everyone will get full marks on almost every quiz. They are explicitly intended not to gauge your ability, but to nudge you into keeping up with the unit. | Immediately after you’ve submitted your quiz, you can (and should!) check to see exactly what you got wrong and why. | The quizzes are hosted on Blackboard. They are linked from the table in the main hub, or you can see them all here. | There is a dummy quiz available here which is worth no credit, is completely optional, and has no educational value. Take it if you want to make sure that Blackboard quizzes work well on your browser. | . ",
    "url": "/algo2/exam/#blackboard-quizzes",
    
    "relUrl": "/exam/#blackboard-quizzes"
  },"15": {
    "doc": "Exam and quiz info",
    "title": "Exam",
    "content": "Everything below is now final. Format and rules . | The exam will be in-person and on-paper. | The exam will be two hours long. | The exam will be open-note. This means you will be allowed to bring four pages of handwritten or printed A4 notes with you to the exam room - these can be double-sided. You will not be allowed to access the unit lecture notes or any other resources, and you will not be allowed to work with others. | Non-programmable calculators are allowed, although you probably won’t need one. Regulations have changed this year, and there is no longer a specific Faculty seal of approval required - any non-programmable model is fine. Programmable calculators are not allowed. | The exam will be divided into two sections. | The first section will contain short-answer questions worth a total of 75 marks, in a similar format to the Blackboard quizzes. For these questions, you won’t need to show any working, and any working you do show won’t be taken into account — you’ll just need to choose an option, fill in blanks, write down a number, or give some similarly short answer. If you do show working, it’s important that you circle your final answer or otherwise make it very clear what it is. | The second section will contain long-answer questions worth a total of 75 marks, in a similar format to the problem sheets. For these questions, you should show your working as you will be able to get partial credit even for an incorrect answer. | . | Not all the questions will be of equal difficulty. I subscribe to the idea that a unit mark of 40 should be attainable by everyone in the class who’s willing to put effort in, a mark of 70 should show genuinely impressive understanding of the material, and a mark of 90 or more should be a huge achievement that comes round once per year or less. This means the questions will start out relatively easy, to make sure it’s not too hard to pass, and then get progressively harder, to make sure it’s not too easy to get a high mark. In particular, you are not expected to finish the exam. | To help you plan your time, each question (and each part of multi-part questions) will be tagged “short”, “medium” or “long”. In total, 80 marks will be available from short questions, 50 marks will be available from medium questions, and 20 marks will be available from long questions, for a total of 150. | Short questions will correspond to questions rated [*] or to the easier questions rated [**] on the quizzes and example sheets. | Medium questions will correspond to the harder questions rated [**] on the quizzes and example sheets, or to the easier [***] questions. Some of them will require you to prove results or come up with new algorithms, and some of them will be similar to “short” questions but be more involved and require more time and effort for the same amount of marks. | Long questions will correspond to questions rated [***] and [****] on the quizzes and example sheets. They are intended to push the very best students, and you should not attempt them unless you have already tried all the short and medium questions. | . | I won’t “curve” marks, but I will make sure that I didn’t accidentally make the exam too hard. For transparency, this is the procedure I use. | For each grade boundary (i.e. 40, 50, 60, 70) in the unit, I look at a couple of randomly-chosen anonymised students whose final mark is just below it (i.e. with marks 39, 49, 59, 69). | I look at those students’ exam scripts in detail and decide whether it’s correct that they should fail to attain the relevant grade, given the questions they’ve been able to answer relative to the unit’s ILOs. Let’s take the specific case of 40 as an example. In this case, the question I’m asking is: is it correct that this should fail rather than narrowly passing? | If I think it is correct that these scripts should fail, I define f(39) = 39. | Otherwise, i.e. if I think these scripts actually should be passes, then I define f(39) to be the mark I think they should have got – e.g. f(39) = 40 if I think they should be bare passes, or 42 if I think they should be passes with a bit of room to spare. | So now I have four numbers f(39), f(49), f(59) and f(69). Together with f(0) = 0 and f(100) = 100, this defines a piecewise linear function f:[0,100] → [0,100] with five linear segments. Everyone’s raw mark then gets mapped to f(raw_mark) via scripts and spreadsheets, and I upload f(raw_mark) to Blackboard (and it goes from there to eVision). | The end result is that your final mark might be higher than the sum of your marks for individual questions, if I accidentally make the exam harder than intended. It will never be lower. | The difference between this process and curving is that I’m not doing it to achieve a specific number of people passing or getting Firsts. In the incredibly unlikely event that half the class fails, I will not automatically drop the pass mark - I’ll instead be trying to decide whether half the class should have failed, and I’ll make my decision based on that. | . | . Practice questions . | The exams in past years will be a little harder than the exam this year, because they were entirely open-note exams that allowed full access to the lecture notes - as such, it didn’t really make sense to ask any pure bookwork questions like “define NP”. That said, the material covered in the unit is exactly the same, and they’re still the best source of practice. The following papers are available, with answers: . | Mock exam (answers) | August 2021-22 (answers) | January 2021-22 (answers) | August 2020-21 (answers) | January 2020-21 (answers) | . | Towards the end of term, I’ll be making new copies of the Blackboard quizzes which you can take as often as you like for revision purposes, to help you practice for short and medium questions. | The problem sheet questions we didn’t go through in the example class are a great source of practice for medium and long questions. | The exercises given in the relevant chapters of the unit’s recommended textbooks (see here) are great practice for short, medium and long questions. | I’m not making past papers from before 2020-21 available, because the unit has changed a huge amount since then. In 2019–20, the unit was 20cp instead of 10cp, taught quite different material, and the exam did not allow access to notes. You can probably get copies from the Bristol library, but I wouldn’t bother if I were you — I already repurposed the most useful stuff for the mock exam anyway, and they won’t come with detailed answers. | . Examinability . | All material appearing in video lectures and on Blackboard quizzes is examinable, with the following exceptions: . | If a result is stated in lectures but not proved, then the proof is non-examinable. For example, you won’t be expected to know how to prove the worst-case running time of the Edmonds-Karp algorithm, but you will be expected to know what that running time is. | Anything stated verbally in a lecture but not written on the slides is non-examinable. | All historical asides, industrial applications, and jokes are non-examinable. | Anything intrinsic to the way the material is presented is non-examinable. For example, I’d never ask you to state “Lemma 1 of Lecture 23”, but you I might ask a question which requires you to know that the lemma is true, or how the proof works. If a result has a standard name, then that name is examinable - for example, I might ask you to state Dirac’s theorem or the Cook-Levin theorem. | Anything specifically flagged as non-examinable is non-examinable. (Duh.) | . | Anything in the following materials is non-examinable unless it also appears in a video lecture or Blackboard quiz: . | Anything discussed in the Q&amp;As but not covered in the lectures and quizzes. | Anything specific to the problem sheets. The general techniques they teach are examinable — for example, how to prove that a problem is NP-hard, or how to find a counterexample to a proposed greedy algorithm — but the specific questions and answers are not. | Anything linked on the unit pages under readings and resources. They’re just intended as alternative sources if you’re having trouble understanding the lectures or if you’d like more detail on something. | . | . Strategy tips . | Remember that the exam will count for 90% of the unit marks, and the Blackboard quizzes will count for 10%. So if you have half-marks or more in every quiz (which counts as full marks), then you need 34% in the exam to pass, 45% in the exam for a II.ii, 56% for a II.i, and 67% for a First. Every little helps! | Being able to bring notes into the exam is incredibly powerful, and you should prepare them carefully. You don’t have anywhere near enough space to just print out the lecture notes and bring them in. Instead, you should try to distill the concepts down to the very basics, to the point where you can reconstruct them from just a few reminder notes. In doing so, you will not only get an immediate advantage in the exam, you will also have made an excellent start on understanding and revising the material. | If you have been struggling with the unit and have limited time to revise, you should try to get a shallow understanding of the entire unit rather than a deep understanding of one or two areas. Being able to answer almost all the short questions and some of the medium questions is a perfectly viable path to a II.i, and being able to answer a decent proportion of the short questions and no medium questions is a perfectly viable path to a pass. By contrast, being able to answer almost all the short, medium and long questions on half of the unit but not being able to answer anything on the other half will lead to a II.ii or worse while taking much more work to achieve. | While I try and cover a large proportion of the unit material in the exam, inevitably some topics come up more than others and some topics don’t come up at all. | If I ask you to prove something on the exam, the standard of rigour I’ll be looking for is: would this convince your boss that the statement is true? In other words, I know most of you aren’t mathematicians, so I’m not testing your ability to write rigorous symbol-heavy proofs like a mathematician would. (Even though I tend to write proofs that way myself in e.g. the problem sheet answers…) I’m testing your ability to see why something has to be true, and to communicate that argument clearly enough to be understood by others and to convince others. If you’ve done that, then you’ll get full marks on the question. In particular, you do not need anywhere near the level of rigour or formality shown in example sheet solutions to get full marks. | . ",
    "url": "/algo2/exam/#exam",
    
    "relUrl": "/exam/#exam"
  },"16": {
    "doc": "Exam and quiz info",
    "title": "Exam and quiz info",
    "content": ". | Blackboard quizzes | Exam . | Format and rules | Practice questions | Examinability | Strategy tips | . | . Your unit mark will be split into two parts. 10% will come from Blackboard quizzes, which are called “in-class tests” on eVision but are neither in-class nor tests. The remaining 90% will come from an exam in January. ",
    "url": "/algo2/exam/",
    
    "relUrl": "/exam/"
  },"17": {
    "doc": "Get help for the unit",
    "title": "FAQ",
    "content": "Before contacting anyone, it’s worth skimming through this FAQ (or using the full-text search above) to see if your question is answered there. I need help understanding a concept from the unit. What should I do? . You have several good options: . | Ask a question in the unit team, and either I or a TA will answer as soon as we can. Try to make your question specific, though - “I don’t understand the link between the definition of O-notation and growth in video 1-3” will get you a more helpful response than “I don’t understand O-notation”. | Ask a question in the weekly Q&amp;A, which you can do anonymously or in advance via Padlet. I’ll prioritise questions about the current week’s material, but you can ask questions about earlier weeks as well and I’ll probably have time to get to them. | Ask me or a TA during the weekly problem class. | Take a look at the recommended readings for the week here to get a different view on the topic from the lecture notes. | If all else fails, try Google! Nothing in this unit is so obscure you can’t find good sources online. | . The one thing I’d ask you not to do is email me directly. This is a hard unit, and it’s very unlikely you’re the only one who’s having trouble with the concept, so it’s much better to ask in the unit team - that way, everyone gets to benefit from the answer. Even from a selfish point of view, if you ask in the unit team, there’s a good chance you’ll get a faster response, since TAs and other students can answer as well. I think I’ve found an error in the notes or a Blackboard quiz. What should I do? . Get in contact with me, ideally via the unit team - if you’re right, then other people get to hear about the error, and if you’re wrong, then other people get to hear the explanation. Even if it turns out you’re wrong, I will never, ever be angry or annoyed at you for bringing it up! Nobody’s perfect, including me, and wanting to make the unit better is something we can all get behind. If the error is in a Blackboard quiz, then I’ll remark the quiz accordingly. How do I see the answers and feedback for a Blackboard quiz I’ve already taken? . | Go to “My Grades and Feedback” under the “Assessment, submission and feedback” section of the unit page. | Choose your quiz from the list. | Do not click the OK button - unlike on the original results screen, this will take you back to the quizzes section without showing you the feedback. Instead, click your mark, as shown in this picture. | Swear that if you end up designing a user interface one day, you will do a better job than this. (We teach the Interaction and Society unit for a reason…) | . What are the late penalties on Blackboard quizzes? . Late penalties are set by 17.4 of the university regulations here (the first bullet point). Basically, you’ll lose ten marks per day from your final quiz mark up until four days past the deadline, and then your mark will be set to zero. This applies after the “rounding up” calculation - if you get 51% and you submit one day late, then your final mark will be 90% rather than 41%. Public holidays and university closure days after the deadline don’t count towards the penalty, but weekends do. I don’t have any discretion over this, but if you have something serious going on then you can contact the school office to apply for extenuating circumstances that might get them waived. At the end of the day though, a single day of late penalties will only reduce your unit mark by 0.1%, so it’s not worth worrying about too much. Can I get an extension on the deadline for a Blackboard quiz? . This actually isn’t my decision - you’ll need to get in contact with the school office and make a formal extension request. Why is my quiz mark is showing up as zero, even though I only submitted one day late? . This is an artifact of the way Blackboard works - if you’re past the deadline, you’re flagged as late until your mark is manually reviewed, and until that happens it will show up as zero. I apply all the late penalties at once at the end of term, once all the dust has settled with extension requests, so your mark will show as zero until then. Which problem class group am I in? . This should appear in your Outlook calendar. If it doesn’t, a spreadsheet of all groups is available here with one sheet per group (requires UoB login). Can I change my problem class group? . Yes, if you have a good reason - just email me. (Not wanting a 9:00 problem class, while totally understandable, is not a good enough reason - I don’t want to overfill the 10:30 class.) . Wait, the Q&amp;A is completely anonymous? And I can submit images via Padlet? *Grins malevolently* . It’s still moderated - all Padlet posts need to be approved before they’ll show up. ;-) . What’s with the cats? . Honestly, I started with them during 2020-21 when everything was on fire with COVID and we all needed something to raise our spirits, and people enjoyed them a lot more than I expected. People still enjoy them, so I keep the tradition going! . ",
    "url": "/algo2/help/#faq",
    
    "relUrl": "/help/#faq"
  },"18": {
    "doc": "Get help for the unit",
    "title": "Contact details",
    "content": "The unit director is John Lapinskas, email address john.lapinskas@bristol.ac.uk. The lead TA for the unit is Adithya Diddapur, email address adi.diddapur@bristol.ac.uk. ",
    "url": "/algo2/help/#contact-details",
    
    "relUrl": "/help/#contact-details"
  },"19": {
    "doc": "Get help for the unit",
    "title": "The unit team",
    "content": "Everyone taking this unit should have been added to a Microsoft Team called “COMS20010: Algorithms II 2021/22 (TB-1, A)”. The Q&amp;A sessions will be run as meetings in this team, and access to recordings of Q&amp;A sessions and problem classes will be restricted to members of this team. If you’ve joined the unit late, you might not have been added - in that case, please email me and I’ll add you myself. ",
    "url": "/algo2/help/#the-unit-team",
    
    "relUrl": "/help/#the-unit-team"
  },"20": {
    "doc": "Get help for the unit",
    "title": "Get help for the unit",
    "content": ". | FAQ . | I need help understanding a concept from the unit. What should I do? | I think I’ve found an error in the notes or a Blackboard quiz. What should I do? | How do I see the answers and feedback for a Blackboard quiz I’ve already taken? | What are the late penalties on Blackboard quizzes? | Can I get an extension on the deadline for a Blackboard quiz? | Why is my quiz mark is showing up as zero, even though I only submitted one day late? | Which problem class group am I in? | Can I change my problem class group? | Wait, the Q&amp;A is completely anonymous? And I can submit images via Padlet? *Grins malevolently* | What’s with the cats? | . | Contact details | The unit team | . ",
    "url": "/algo2/help/",
    
    "relUrl": "/help/"
  },"21": {
    "doc": "Main hub",
    "title": "Welcome",
    "content": "Welcome to Algorithms II! This unit is a direct continuation of the algorithms part of Object-Oriented Programming and Algorithms from last year. The focus will be on three key algorithm design skills, which will be useful to you no matter which language or programming paradigm you end up working with: . | Greedy algorithms. In other words, when can you replace a complicated algorithm that carefully considers the whole situation with a simple algorithm that just repeatedly does whatever seems like a good idea at the time? | Graphs and networks. You were briefly introduced to these in Imperative Programming last year, and perhaps in school before that, but in this unit you will learn to use them effectively to model and solve unfamiliar problems. | Reductions. In other words, rather than writing your own algorithm to solve a problem, either making clever use of a library function or proving that no fast algorithm exists. This will include learning how to apply dynamic programming techniques, which you were introduced to in Algorithms last year, to unfamiliar problems. | . ",
    "url": "/algo2/#welcome",
    
    "relUrl": "/#welcome"
  },"22": {
    "doc": "Main hub",
    "title": "Schedule and links to materials",
    "content": "Most of the material below (especially recordings of Q&amp;As and problem classes) will require you to log in to University of Bristol systems. | Week 1 | Monday 2022/09/26Videos released | 1-1: Unit introduction (Video, slides, handout) | 1-2: Induction(Video, slides, handout) | . |   | Optional resources | 1-3: Defining O-notation (Video, slides, handout) | 1-4: Using O-notation (Video, slides, handout) | . |   | Monday 2022/10/03Quiz 1 due | Thursday 2022/09/29Q&amp;A 1 (Padlet, recording, board) | Friday 2022/10/05 Problem class 1 (Sheet, solutions) | . |   | (Optional: Dummy quiz to test your browser works.) |   |   | . | Week 2 | Monday 2022/10/03Videos released | 2-1: Greedy algorithms and interval scheduling (Video, slides, handout) | 2-2: Correctness proofs for interval scheduling(Video, slides, handout) | . |   | Optional resources | 2-3: The bridges of Königsberg (Video, slides, handout) | 2-4: When does a graph have an Euler walk? (Video, slides, handout) | . |   | Monday 2022/10/10Quiz 2 due | Thursday 2022/10/06Q&amp;A 2 (Padlet, recording, board) | Friday 2022/10/14 Problem class 2 (Sheet, solutions) | . | Week 3 | Monday 2022/10/10Videos released | 3-1: Directed Euler walks (Video, slides, handout) | 3-2: Hamilton cycles(Video, slides, handout) | . |   | Optional resources | 3-3: Shaking hands (Video, slides, handout) | 3-4: Trees (Video, slides, handout) | . |   | Monday 2022/10/17Quiz 3 due | Thursday 2022/10/13Q&amp;A 3 (Padlet, recording, board) | Friday 2022/10/21 Problem class 3(Sheet, solutions) | . | Week 4 | Monday 2022/10/17Videos released | 4-1: Graph representations (Video, slides, handout) | 4-2: Depth-first search(Video, slides, handout) | . |   | Optional resources | 4-3: Breadth-first search (Video, slides, handout) | 4-4: Dijkstra’s algorithm (Video, slides, handout) | . |   | Monday 2022/10/24Quiz 4 due | Thursday 2022/10/20Q&amp;A 4 (Padlet, recording, board) | Friday 2022/10/21 Problem class 4(Sheet, solutions) | . | Week 5 | Monday 2022/10/24Videos released | 5-1: Matchings I: Definitions (Video, slides, handout) | 5-2: Matchings II:Finding the maximum(Video, slides, handout) | . |   | Optional resources | 5-3: MSTs I: Prim’s algorithm (Video, slides, handout) | 5-4: MSTs II: Kruskal’s algorithm (Video, slides, handout) | . |   | Monday 2022/11/07(Week 7, not 6!)Quiz 5 due | Thursday 2022/10/27Q&amp;A 5 (Padlet, recording, board) | Friday 2022/11/11Problem class 5(Sheet, solutions) | . | Week 6 | Reading week! | No videos! | No quiz! | . |   | No resources! | No Q&amp;A! | No problem class! | . | Week 7 | Monday 2022/11/07Videos released | 6-1: Making Kruskal’s algorithm fast (Video, slides, handout) | 6-2: The union-finddata structure(Video, slides, handout) | . |   | Optional resources | 6-3: 2-3-4 trees I:Search and insertion (Video, slides, handout) | 6-4: 2-3-4 trees II: Deletion andalternative forms (Video, slides, handout) | . |   | Tuesday 2022/11/15Quiz 6 due | Thursday 2022/11/10Q&amp;A 6 (Padlet, recording, board) | Friday 2022/11/11Problem class 6(Sheet, solutions) | . | Week 8 | Monday 2022/11/14Videos released | 7-1: Linear programming (Video, slides, handout) | 7-2: How the simplexalgorithm works(Video, slides, handout) | . |   | Optional resources | 7-3: Flow networks (Video, slides, handout) | 7-4: The Ford-Fulkersonalgorithm (Video, slides, handout) | . |   | Tuesday 2022/11/22Quiz 7 due | Thursday 2022/11/18Q&amp;A 7 (Padlet, recording, board) | No problem class dueto strike action!(Sheet, solutions) | . | Week 9 | Monday 2022/11/21Videos released | 8-1: Why Ford-Fulkersonlooks so familiar (Video, slides, handout) | 8-2: Applications ofFord-Fulkerson(Video, slides, handout) | . |   | Optional resources | 8-3: SAT and theclass NP (Video, slides, handout) | 8-4: NP-completenessof 3-SAT (Video, slides, handout) | . |   | Tuesday 2022/11/29Quiz 8 due | No Q&amp;A dueto strike action! | Friday 2022/12/02Problem class 7(Sheet, solutions) | . | Week 10 | Monday 2022/11/28Videos released | 9-1: Independent setsand vertex covers (Video, slides, handout) | 9-2: Non-examinablesketch proof of theCook-Levin theorem(Video, slides, handout) | . |   | Optional resources | 9-3: NP versus Co-NP (Video, slides, handout) | 9-4: Dealing withNP-hard problems (Video, slides, handout) | . |   | Tuesday 2022/12/06Quiz 9 due | Thursday 2022/12/01Q&amp;A 8 (Padlet, recording, board) | Friday 2022/12/09Problem class 8(Sheet, solutions) | . | Week 11 | Monday 2022/12/05Videos released | 10-1: Weighted intervalscheduling (Video, slides, handout) | 10-2: Dynamic programming(Video, slides, handout) | . |   | Optional resources | 10-3: The Bellman-Fordalgorithm (Video, slides, handout) | 10-4: The realBellman-Ford algorithm (Video, slides, handout) | . |   | Tuesday 2022/12/13Quiz 10 due | Thursday 2022/12/08Q&amp;A 9 (Padlet, recording, board) | Friday 2022/12/16Problem class 9(Sheet, solutions) | . | Week 12 | No more material! | Thursday 2022/12/15Q&amp;A 10 (Padlet, recording, board) | Friday 2022/12/16Revision quizzes | . ",
    "url": "/algo2/#schedule-and-links-to-materials",
    
    "relUrl": "/#schedule-and-links-to-materials"
  },"23": {
    "doc": "Main hub",
    "title": "What’s in the unit",
    "content": "For more details on any of this, take a look at the first lecture video above. Video lectures will be released every Monday at 10am, at a rate of four 15-25 minute videos per week. Everything in these lectures will be examinable unless explicitly stated otherwise, so you should watch them all carefully and make sure you understand them well. You should aim to watch all of them before the quiz deadline on the following Tuesday. Please do actually watch them rather than just skimming through the slides - some things are much easier to understand when someone’s talking through them! . Textbook readings will be released at the same time as the video lectures, if you’d like more information or more detailed proofs. They are all completely optional and non-examinable, but they’re a good place to try if you want another explanation of something. Blackboard quizzes are weekly summative exercises covering that week’s material. Each quiz will be released on Monday at 10am, and due the following week. They will be automatically marked as soon as you submit them, and you will immediately be able to see what you got wrong and why. Together, they will account for 10% of your unit mark. However, any mark of 50% or more on a quiz will count as 100% in this calculation - in other words, everyone who makes a reasonable attempt will receive full marks. All the material you need for these quizzes will be covered in the video lectures, but you are encouraged to use any other resources you find helpful, and to work on them together with your friends. They’re not timed, and you can leave the page after starting and come back later. In addition to being worth marks in and of themselves, these quizzes will be good preparation for the short-answer portion of the exam. Q&amp;A sessions are weekly hour-long sessions in which I answer any questions about the unit you might have - for example, questions about the video lectures, the problem classes, the Blackboard quizzes or the exam. These will be run online with Padlet and Teams, allowing you to ask questions anonymously or in advance (with TA moderation). I’m running them online not because of covid, but because I’ve tried running them both online and in-person and I sincerely think they work better online. Attendance is optional, but encouraged if you’re having difficulty with any part of the week’s material. Drop-in sessions with TAs will run several times per week. These are similar to “office hours” - you can come along without booking in advance to talk to someone one-on-one. These will take place at the following times and locations: . | Mondays 12:00-13:00: In-person, Ada Lovelace SM2. Week 2 onwards. | Tuesdays 10:00-11:00: In-person, Merchant Venturers Building 1.15. Week 2 onwards. | Wednesdays 15:00-16:00: Online on the unit team. Week 2 onwards. | Thursdays 14:00-15:00: In-person, Queens Building 1.59. Week 2 onwards. | Fridays 13:00-14:00: Online on the unit team. Week 1 onwards. | . Problem sheets are weekly formative exercises covering the previous week’s material. Each sheet will be discussed in an in-person problem class the week after it is released. These will be ~50-person classes led by either John or Adi, and they won’t follow the typical model of students doing problems while TAs wander around helping people. You don’t have to try the sheet before the class, or even look at it. You do have to bring a copy of the sheet and make an effort to understand the previous week’s material via the videos, Blackboard quizzes, Q&amp;A, and asking questions on the unit team. The classes will then be a split between interactive lectures and group work, focusing mostly not on the material itself but on how to apply it to solve problems. It’s also worth noting that you should not try to finish the problem sheets! They contain far too much work to finish them in a week without neglecting your other units, and normally we’ll only pick out a few questions to discuss during problem classes. The reason there are so many questions is that they’ll also be good preparation for the long-answer portion of the exam, so you can double back later on and use them for practice while you’re revising. While I can’t require that you wear a mask, I would still ask you to do so. As of July 31st, 3% of the UK population are experiencing long COVID symptoms according to the official data, and about 1.5% of the population have been experiencing them for a year or more. It is true that being vaccinated reduces the risk of long COVID, but “only” by about half. My own anecdotal experience agrees with this - most people I know have had COVID, and a few of them do indeed still have long-lasting symptoms despite having contracted omicron rather than delta and despite being fully vaccinated and boosted. It’s just not a smart risk to take when you can avoid it by wearing a good mask. Unfiltered or poorly-fitting cloth masks and surgical masks are a nice gesture to protect others, but will do very little to protect you. I’ll be wearing one of these - a decently-fitting cloth mask with insertable KN95 filters. It’s not perfect protection, but it’s good enough to massively cut your risk without being overly bulky, expensive or muffling. If you are very worried about COVID and would otherwise not come to the problem classes, I would recommend one of these masks with these FFP3 filters - they have a perfect seal and will give you absolutely perfect protection, at the cost of making you look and sound ridiculous. I don’t take attendance at problem classes, and I’d encourage anyone who is feeling ill or who has tested positive not to attend - recordings will be made available on the unit page after the fact, so you can catch up easily. ",
    "url": "/algo2/#whats-in-the-unit",
    
    "relUrl": "/#whats-in-the-unit"
  },"24": {
    "doc": "Main hub",
    "title": "Planning your time",
    "content": "The baseline expectation is that as a Bristol student, you should be spending 40 hours per week on your course, i.e. the same amount of time you’d spend with a full-time job. This unit is worth 10 credit points out of 60 for the term, so you should aim to spend about 7 hours per week on it. Roughly speaking, that will divide into: . | 2 hours per week on video lectures; | 2.5 hours per week on self-study getting to grips with the material; | 1 hour per week on the Blackboard quiz; and | 1.5 hours per week on attending the problem classes. | . The self-study might involve e.g. going back over the lecture notes, or attending the Q&amp;A, or looking at the textbook readings, or asking questions on the unit team, or trying questions from the problem sheet - the important thing is that you put the time in, and that you work in the way that suits you best. ",
    "url": "/algo2/#planning-your-time",
    
    "relUrl": "/#planning-your-time"
  },"25": {
    "doc": "Main hub",
    "title": "Main hub",
    "content": ". | Welcome | Schedule and links to materials | What’s in the unit | Planning your time | . ",
    "url": "/algo2/",
    
    "relUrl": "/"
  },"26": {
    "doc": "Readings and resources",
    "title": "Generally-useful textbooks",
    "content": "The books below are all freely available in electronic format either from the University of Bristol library or (in the case of Erickson) from the author’s website here. None of them are compulsory, but if you’re having a hard time following something from lectures, it might help you to see the same thing presented in a different way. Many of the exercises in the course have also been taken from these books. Introduction to Algorithms (Cormen, Leiserson, Rivest and Stein): This book is a truly excellent reference, and is generally considered the “standard” algorithms text. When I was learning this material for the first time, though, I found it quite dry and difficult to understand. Algorithm Design (Kleinberg and Tardos): This book is the one I wish I’d had as an undergraduate. It moves much more slowly and spells things out in far more detail than Cormen, while being very careful not to lose sight of the overall motivation. Highly recommended. The Algorithm Design Manual (Skiena): When I say Kleinberg and Tardos is the book I wish I’d had as an undergraduate, bear in mind that I did my undergraduate degree in maths! This book is written from a more “engineering” point of view, and assumes less ability to prove things, than either of the books above. I particularly like the “war stories” in each chapter, which give examples of how the techniques we cover in this course can be used in practice. Algorithms (Erickson): Frankly I don’t know much about this book - I’ve only looked at the chapter on spanning trees in any detail - but that chapter talks about both Borůvka’s algorithm and Hyperbole and a Half, a combination which instantly won my respect. The book opens by quoting Skiena: “It is traditional for the author to magnanimously accept the blame for whatever deficiencies remain. I don’t. Any errors, deficiencies, or problems in this book are somebody else’s fault, but I would appreciate knowing about them so as to determine who is to blame.” It then warns the reader that it contains “several mistakes, bugs, gaffes, omissions, snafus, kludges, typos, mathos, grammaros, thinkos, brain farts, poor design decisions, historical inaccuracies, anachronisms, inconsistencies, exaggerations, dithering, blather, distortions, oversimplifications, redundancy, logorrhea, nonsense, garbage, cruft, junk, and outright lies, all of which are entirely Steve Skiena’s fault”. A much more light-hearted approach to the subject than the other options on the list. Sometimes I will also recommend parts of other books, generally when none of the above four books cover a topic well enough. ",
    "url": "/algo2/readings/#generally-useful-textbooks",
    
    "relUrl": "/readings/#generally-useful-textbooks"
  },"27": {
    "doc": "Readings and resources",
    "title": "Resources for specific weeks",
    "content": "Week 1 . | Cormen et al.: Chapters 3.1 and 3.2 cover O-notation. | Kleinberg and Tardos: Chapters 2.1 and 2.2 cover O-notation. | Skiena: Chapter 1.3 covers proof in general, with 1.3.4 dedicated to induction in particular. Chapters 2.1 to 2.5 cover O-notation. | . Week 2 . | Cormen et al.: 16.1 covers interval scheduling, 16.2 discusses greedy algorithms more generally. | Erickson: 4.2-4.3 covers interval scheduling, 5.1 covers the history of graphs and Eulera walks, and 5.2 covers some basic definitions. | Kleinberg and Tardos: 4.1 covers interval scheduling and greedy algorithms and 3.1 covers graphs. | Skiena: 1.2 covers interval scheduling, 5.1 covers graphs, and 15.7 covers Euler walks. | Bondy and Murty, Graph Theory with Applications: 4.1 covers Euler walks. | . Week 3 . | Kleinberg and Tardos: 3.1 covers trees (though not in much detail). | Bondy and Murty, Graph Theory with Applications: 1.5 covers the handshaking lemma, and 4.2 covers Hamilton cycles and Dirac’s theorem. | Harris, Hirst and Mossinghoff, Combinatorics and Graph Theory: 1.3.1 and 1.3.2 covers trees in more detail than Kleinberg and Tardos, giving alternative proofs of the first few results proved in the video. | Even, Graph Algorithms: 2.1 proves an analogue of the fundamental lemma of trees. | . Back to CS books next week, honest! . Week 4 . | Cormen et al.: 22.1 covers graph representations, 22.2 covers breadth-first search, 22.3 covers depth-first search, and 24.3 covers Dijkstra’s algorithm. | Kleinberg and Tardos: 3.2 and 3.3 cover graph representations, breadth-first search and depth-first search, and 4.4 covers Dijkstra’s algorithm. | Skiena: 5.2 covers graph representations, 5.6 covers breadth-first search, 5.8 covers depth-first search, and 6.3.1 covers Dijkstra’s algorithm. | Erickson: 5.3 and 5.4 cover graph representations, and 5.5, 5.6 and 8.6 cover breadth-first search, depth-first search, and Dijkstra’s algorithm. | . Week 5 . | Cormen et al.: 23.1 and 23.2 cover Prim’s algorithm and Kruskal’s algorithm, although the section on Kruskal’s algorithm won’t make much sense until next week. | Kleinberg and Tardos: 4.5 covers Prim’s algorithm and Kruskal’s algorithm. | Skiena: 6.1.1 covers Prim’s algorithm, and 6.1.2 covers Kruskal’s algorithm. | Erickson: 7.1, 7.2, 7.4 and 7.5 cover Prim’s algorithm and Kruskal’s algorithm. | Bondy and Murty, Graph Theory with Applications: 5.1 covers matchings and augmenting paths. (Matchings are covered in all four other books as well, but from a different perspective that we will come to later in the course.) | . Week 7 . | Cormen et al.: 21.1-21.3 cover the union-find data structure. 13.1-13.4 cover red-black trees and are an amazing advertisement for never thinking of 2-3-4 trees as red-black trees unless you’re implementing them. 18.1-18.3 cover B-trees, which are a slight generalisation of 2-3-4 trees and include 2-3-4 trees as a special case. | Kleinberg and Tardos: 4.6 covers the union-find data structure. | Skiena: 6.1.3 covers the union-find data structure. 3.4.3 discusses balanced trees, and 12.1 gives a detailed comparison of 2-3-4 trees to other data structures with similar purposes and complexities, but the book doesn’t go into any detail on implementation. | Erickson: The union-find data structure is covered in the “Director’s cut” here. | . Week 8 . | Cormen et al.: 29.1 and 29.2 give an overview of linear programming. Avoid sections 29.3-5, which discuss the simplex algorithm, unless you are morbidly curious about how it’s possible to spend 28 pages discussing it in detail without once mentioning the geometric intuition behind it. 26.1 covers flow networks, and 26.2 covers Ford-Fulkerson. | Kleinberg and Tardos: 11.4 gives an overview of linear programming and goes into detail about the application to vertex cover. 7.1 and 7.2 cover flow networks and Ford-Fulkerson. | Skiena: 13.6 discusses linear programming from a high-level “how do I use/solve this?” perspective. Their coverage of flow networks and Ford-Fulkerson in 6.5 is bound up with their coverage of bipartite matchings, for reasons that will become clear next week. | Erickson: Network flows and Ford-Fulkerson are covered in 10.1-10.4. | A pleasant song to listen to while you reflect on how the details of the simplex algorithm are non-examinable: Here. | . Week 9 . | Cormen et al.: 26.3 covers maximum matchings in bipartite graphs from a flow perspective. 34-34.3 covers the definitions of NP-completeness, and 34.4 and 34.5 give examples of NP-completeness proofs. | Kleinberg and Tardos: 7.5 covers maximum matchings in bipartite graphs from a flow perspective, and 7.7 covers circulations. 8.1 and 8.3 cover the definition of NP-completeness, and 8.2 covers the proof that 3SAT is NP-complete. | Skiena: 9.1-9.3 cover the idea of a reduction, with several examples. 9.4 covers the proof that 3-SAT is NP-complete. 9.5 gives some more examples of reductions, 9.6 gives some general advice for coming up with reductions, and 9.9 discusses the philosophy of P versus NP. | Erickson: 11.2 covers vertex capacities and 11.3 covers maximum matchings in bipartite graphs from a flow perspective. 12.1-12.3 and 12.5 set out the key definitions for NP-completeness. | . Week 10 . | Cormen et al.: 34.3 proves an alternative form of the Cook-Levin theorem, proving directly that “Circuit-SAT” is NP-complete. 34.5 gives an alternative NP-completeness proof for vertex cover. | Kleinberg and Tardos: 8.2 gives a slicker reduction from 3-SAT to independent set, and 8.4 proves the alternative form of the Cook-Levin theorem. 8.9 defines Co-NP. 8.10 gives a nice taxonomy of NP-hard problems for use in reductions. Chapter 10 gives a detailed treatment of treewidth, and chapter 11 gives a detailed treatment of approximation algorithms. | Skiena: 9.5.2 gives an alternative proof that vertex cover is NP-hard. 9.6-9.8 give a nice set of heuristics for coming up with hardness proofs in general. 9.10 discusses how to deal with NP-complete problems. | Erickson: 12.7 gives a slicker reduction from 3-SAT to independent set, 12.8 discusses how to come up with hardness proofs in general, 12.9 and 12.14 gives a reduction from independent set to vertex cover, and 12.13 gives a nice taxonomy of NP-complete problems for use in reductions. | Arora and Barak, Computational Complexity: 2.3 gives the full version of the proof of Cook-Levin I sketched in video 10-2, and 2.6 and 2.7 feature a good discussion of NP versus Co-NP. | The most accurate (and funniest) pop-culture exposition of quantum computing I’ve ever seen. | . Week 11 . | Cormen et al.: Dynamic programming as a concept is covered in chapter 15 with many of the same examples given in Object-Oriented Programming and Algorithms last year (e.g. pole-cutting is 15.1). Weighted interval scheduling is demoted to an exercise in 16.1, which focuses on unweighted interval scheduling. Bellman-Ford is covered in 24.1, but only the “final version” covered in video 11-4 and not from the same dynamic programming perspective used in the unit. Cormen isn’t very useful here. | Kleinberg and Tardos: Dynamic programming as a concept is covered in chapter 6. Weighted interval scheduling is covered in 6.1, and Bellman-Ford is covered in 6.8 in a very similar way to how we cover it. The rest of chapter 6 consists of a whole lot more examples of dynamic programming algorithms with an emphasis on how you would come up with them, and with a very good collection of exercises at the end of the chapter. Very strongly recommended. | Skiena: Dynamic programming as a concept is covered in chapter 8. The coverage is good and worth reading, but the examples used are completely different - weighted interval scheduling does not appear in the book, and Bellman-Ford is only mentioned in passing in 15.4. | Erickson: Dynamic programming as a concept is covered in chapter 3. Again, good and worth reading (although I strongly disagree with the man about the value of greedy algorithms), but uses different examples to those covered in the course. As with Kleinberg and Tardos, has a very large and very good selection of exercises at the end of the chapter, but they seem to be a fair bit harder. | . ",
    "url": "/algo2/readings/#resources-for-specific-weeks",
    
    "relUrl": "/readings/#resources-for-specific-weeks"
  },"28": {
    "doc": "Readings and resources",
    "title": "Readings and resources",
    "content": ". | Generally-useful textbooks | Resources for specific weeks . | Week 1 | Week 2 | Week 3 | Week 4 | Week 5 | Week 7 | Week 8 | Week 9 | Week 10 | Week 11 | . | . ",
    "url": "/algo2/readings/",
    
    "relUrl": "/readings/"
  }
}
